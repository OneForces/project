import pymysql
import mysql.connector
from core import app, db
from database.models import User, Stage, Assignment
from werkzeug.security import generate_password_hash
from datetime import datetime

def create_database():
    conn = pymysql.connect(
        host="localhost",
        user="root",
        password="root"
    )
    with conn.cursor() as cursor:
        cursor.execute("CREATE DATABASE IF NOT EXISTS project_db CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'project_db' —Å–æ–∑–¥–∞–Ω–∞.")
    conn.commit()
    conn.close()


def initialize_sqlalchemy_models():
    with app.app_context():
        db.create_all()
        print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –ø–æ –º–æ–¥–µ–ª—è–º SQLAlchemy.")

        if not Stage.query.first():
            stages = [
                Stage(id=1, name='–≠—Ç–∞–ø 1', deadline=datetime(2025, 12, 31)),
                Stage(id=4, name='–≠—Ç–∞–ø 4', deadline=datetime(2025, 12, 31)),
                Stage(id=7, name='–≠—Ç–∞–ø 7', deadline=datetime(2025, 12, 31)),
            ]
            db.session.bulk_save_objects(stages)
            print("üìå –≠—Ç–∞–ø—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")

        if not User.query.first():
            users = [
                User(username='gk', password_hash=generate_password_hash('gk'), full_name='–ü–∞—Ö–∞–Ω–æ–≤ –ü–∞—Ö–∞–Ω', role='–ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä', position='–ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä'),
                User(username='dev1', password_hash=generate_password_hash('dev1'), full_name='–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω', role='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', position='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'),
                User(username='dev2', password_hash=generate_password_hash('dev2'), full_name='–ü–µ—Ç—Ä–æ–≤ –ü—ë—Ç—Ä', role='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', position='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'),
            ]
            db.session.bulk_save_objects(users)
            print("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")

        db.session.commit()

        if not Assignment.query.first():
            sender = User.query.filter_by(username='gk').first()
            receiver = User.query.filter_by(username='dev1').first()
            stage = Stage.query.get(1)

            assignment = Assignment(
                sender_id=sender.id,
                receiver_id=receiver.id,
                stage_id=stage.id,
                file_path=None,
                response_file=None,
                status="–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
            )
            db.session.add(assignment)
            print("üì§ –¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ")

        db.session.commit()
        print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")


def update_schema_if_needed():
    conn = mysql.connector.connect(
        host='localhost',
        user='root',
        password='root',
        database='project_db',
    )
    cursor = conn.cursor()

    cursor.execute("SHOW TABLES;")
    tables = [row[0] for row in cursor.fetchall()]
    print("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:", tables)

    cursor.execute("""
        SELECT COUNT(*)
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE table_schema = 'project_db'
          AND table_name = 'assignments'
          AND column_name = 'deadline';
    """)
    exists = cursor.fetchone()[0]

    if not exists:
        cursor.execute("ALTER TABLE assignments ADD COLUMN deadline DATE;")
        print("‚úÖ –ü–æ–ª–µ 'deadline' –¥–æ–±–∞–≤–ª–µ–Ω–æ.")
    else:
        print("‚ö†Ô∏è –ü–æ–ª–µ 'deadline' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    conn.commit()
    cursor.close()
    conn.close()


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...")
    create_database()
    initialize_sqlalchemy_models()
    update_schema_if_needed()
    print("üéâ –ì–æ—Ç–æ–≤–æ.")
