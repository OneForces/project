from flask import Blueprint, request, jsonify
from core import db, app
from database.models import User, RegistrationCode
from werkzeug.security import generate_password_hash

auth_bp = Blueprint('auth', __name__)

@auth_bp.route('/login', methods=['GET', 'POST'])
def login():
    return "–§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞"

@auth_bp.route('/register', methods=['POST'])
def register():
    data = request.json

    first_name = data.get("first_name")
    last_name = data.get("last_name")
    position = data.get("position")
    role = data.get("role")
    password = data.get("password")
    reg_code = data.get("reg_code")

    # üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    code = RegistrationCode.query.filter_by(code=reg_code).first()
    if not code:
        return jsonify({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"}), 400

    # üõ° –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ì–ª–∞–≤–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
    if role == "–ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä":
        exists = User.query.filter_by(role="–ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä").first()
        if exists:
            return jsonify({"error": "–ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}), 400

    # ‚úÖ –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –∏ —Å–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    hashed_pw = generate_password_hash(password)
    user = User(
        first_name=first_name,
        last_name=last_name,
        position=position,
        role=role,
        password_hash=hashed_pw
    )
    db.session.add(user)
    db.session.commit()

    return jsonify({"message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"})
